/* eslint-env node */
/* eslint import/no-nodejs-modules:off */

import path from 'path';

import {glob} from 'fast-glob';
import prettier from 'prettier';

import SignedFileBuilder from './signed-file-builder';

type GlobPattern = Parameters<typeof glob>[0];
type Options = {
  pattern: GlobPattern;
} & ConstructorParameters<typeof SignedFileBuilder>[0];

export default class StoriesListBuilder extends SignedFileBuilder {
  private pattern: GlobPattern;

  constructor(options: Options) {
    super(options);
    this.pattern = options.pattern;
  }

  protected async generateFileContent(signingToken: string): Promise<string> {
    const files = await this.findFiles();
    const content = this.sourceTemplate(files, signingToken);
    const formatted = await this.formatSource(content);
    return formatted;
  }

  private async findFiles() {
    const files = await glob(this.pattern, {
      cwd: this.cwd,
    });

    return files;
  }

  private sourceTemplate(data: string[], signingToken: string) {
    return `
      // THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
      //
      // Generated by StoriesListBuilder (${path.basename(__filename)})
      // ${signingToken}
      //
      // This script contains a list of story files to be dynamically loaded by our
      // component library.

      const FilesList: string[] = ${JSON.stringify(data)}

      export {FilesList}
    `;
  }

  private async formatSource(unformatted: string) {
    const config = await prettier.resolveConfig(this.output);
    if (config) {
      return prettier.format(unformatted, {...config, parser: 'babel'});
    }
    return unformatted;
  }
}
